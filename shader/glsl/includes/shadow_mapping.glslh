
float CalcShadowFactor(sampler2D shadowMapTexture, vec4 shadowCoord, vec2 off)
{
    float shadow = 1.0;
    if ( shadowCoord.z > -1.0 && shadowCoord.z < 1.0 )
    {
        float dist = texture(shadowMapTexture, shadowCoord.st + off).r;
        if ( shadowCoord.w > 0.0 && dist < shadowCoord.z - 0.005 )
        {
            shadow = 0.0;
        }
    }
    return shadow;
}

float filterPCF(sampler2D shadowMapTexture, vec4 sc)
{
    ivec2 texDim = textureSize(shadowMapTexture, 0);
    float scale = 1.5;
    float dx = scale * 1.0 / float(texDim.x);
    float dy = scale * 1.0 / float(texDim.y);

    float shadowFactor = 0.0;
    int count = 0;
    int range = 1;

    for (int x = -range; x <= range; x++)
    {
        for (int y = -range; y <= range; y++)
        {
            shadowFactor += CalcShadowFactor(shadowMapTexture, sc, vec2(dx*x, dy*y));
            count++;
        }
    }
    return shadowFactor / count;
}